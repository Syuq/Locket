// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: api/v2/locket_service.proto

package apiv2

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Visibility int32

const (
	Visibility_VISIBILITY_UNSPECIFIED Visibility = 0
	Visibility_PRIVATE                Visibility = 1
	Visibility_PROTECTED              Visibility = 2
	Visibility_PUBLIC                 Visibility = 3
)

// Enum value maps for Visibility.
var (
	Visibility_name = map[int32]string{
		0: "VISIBILITY_UNSPECIFIED",
		1: "PRIVATE",
		2: "PROTECTED",
		3: "PUBLIC",
	}
	Visibility_value = map[string]int32{
		"VISIBILITY_UNSPECIFIED": 0,
		"PRIVATE":                1,
		"PROTECTED":              2,
		"PUBLIC":                 3,
	}
)

func (x Visibility) Enum() *Visibility {
	p := new(Visibility)
	*p = x
	return p
}

func (x Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v2_locket_service_proto_enumTypes[0].Descriptor()
}

func (Visibility) Type() protoreflect.EnumType {
	return &file_api_v2_locket_service_proto_enumTypes[0]
}

func (x Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Visibility.Descriptor instead.
func (Visibility) EnumDescriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{0}
}

type Locket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	// id is the system generated id.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The user defined id of the locket.
	Uid       string    `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	RowStatus RowStatus `protobuf:"varint,3,opt,name=row_status,json=rowStatus,proto3,enum=lockets.api.v2.RowStatus" json:"row_status,omitempty"`
	// The name of the creator.
	// Format: users/{id}
	Creator     string                 `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`
	CreateTime  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	DisplayTime *timestamppb.Timestamp `protobuf:"bytes,78,opt,name=display_time,json=displayTime,proto3" json:"display_time,omitempty"`
	Content     string                 `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	Visibility  Visibility             `protobuf:"varint,9,opt,name=visibility,proto3,enum=lockets.api.v2.Visibility" json:"visibility,omitempty"`
	Pinned      bool                   `protobuf:"varint,10,opt,name=pinned,proto3" json:"pinned,omitempty"`
	ParentId    *int32                 `protobuf:"varint,11,opt,name=parent_id,json=parentId,proto3,oneof" json:"parent_id,omitempty"`
	Resources   []*Resource            `protobuf:"bytes,12,rep,name=resources,proto3" json:"resources,omitempty"`
	Relations   []*LocketRelation      `protobuf:"bytes,13,rep,name=relations,proto3" json:"relations,omitempty"`
	Reactions   []*Reaction            `protobuf:"bytes,14,rep,name=reactions,proto3" json:"reactions,omitempty"`
}

func (x *Locket) Reset() {
	*x = Locket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Locket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Locket) ProtoMessage() {}

func (x *Locket) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Locket.ProtoReflect.Descriptor instead.
func (*Locket) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{0}
}

func (x *Locket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Locket) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Locket) GetRowStatus() RowStatus {
	if x != nil {
		return x.RowStatus
	}
	return RowStatus_ROW_STATUS_UNSPECIFIED
}

func (x *Locket) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Locket) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Locket) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Locket) GetDisplayTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DisplayTime
	}
	return nil
}

func (x *Locket) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Locket) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_VISIBILITY_UNSPECIFIED
}

func (x *Locket) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *Locket) GetParentId() int32 {
	if x != nil && x.ParentId != nil {
		return *x.ParentId
	}
	return 0
}

func (x *Locket) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Locket) GetRelations() []*LocketRelation {
	if x != nil {
		return x.Relations
	}
	return nil
}

func (x *Locket) GetReactions() []*Reaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

type CreateLocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content    string     `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Visibility Visibility `protobuf:"varint,2,opt,name=visibility,proto3,enum=lockets.api.v2.Visibility" json:"visibility,omitempty"`
}

func (x *CreateLocketRequest) Reset() {
	*x = CreateLocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocketRequest) ProtoMessage() {}

func (x *CreateLocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocketRequest.ProtoReflect.Descriptor instead.
func (*CreateLocketRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{1}
}

func (x *CreateLocketRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateLocketRequest) GetVisibility() Visibility {
	if x != nil {
		return x.Visibility
	}
	return Visibility_VISIBILITY_UNSPECIFIED
}

type CreateLocketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locket *Locket `protobuf:"bytes,1,opt,name=locket,proto3" json:"locket,omitempty"`
}

func (x *CreateLocketResponse) Reset() {
	*x = CreateLocketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocketResponse) ProtoMessage() {}

func (x *CreateLocketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocketResponse.ProtoReflect.Descriptor instead.
func (*CreateLocketResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{2}
}

func (x *CreateLocketResponse) GetLocket() *Locket {
	if x != nil {
		return x.Locket
	}
	return nil
}

type ListLocketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of lockets to return.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// A page token, received from a previous `ListLockets` call.
	// Provide this to retrieve the subsequent page.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Filter is used to filter lockets returned in the list.
	// Format: "creator == users/{uid} && visibilities == ['PUBLIC', 'PROTECTED']"
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListLocketsRequest) Reset() {
	*x = ListLocketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketsRequest) ProtoMessage() {}

func (x *ListLocketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketsRequest.ProtoReflect.Descriptor instead.
func (*ListLocketsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{3}
}

func (x *ListLocketsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListLocketsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListLocketsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ListLocketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lockets []*Locket `protobuf:"bytes,1,rep,name=lockets,proto3" json:"lockets,omitempty"`
	// A token, which can be sent as `page_token` to retrieve the next page.
	// If this field is omitted, there are no subsequent pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListLocketsResponse) Reset() {
	*x = ListLocketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketsResponse) ProtoMessage() {}

func (x *ListLocketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketsResponse.ProtoReflect.Descriptor instead.
func (*ListLocketsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{4}
}

func (x *ListLocketsResponse) GetLockets() []*Locket {
	if x != nil {
		return x.Lockets
	}
	return nil
}

func (x *ListLocketsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type SearchLocketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Filter is used to filter lockets returned.
	// Format: "creator == users/{uid} && visibilities == ['PUBLIC', 'PROTECTED']"
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *SearchLocketsRequest) Reset() {
	*x = SearchLocketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLocketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocketsRequest) ProtoMessage() {}

func (x *SearchLocketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocketsRequest.ProtoReflect.Descriptor instead.
func (*SearchLocketsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{5}
}

func (x *SearchLocketsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type SearchLocketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lockets []*Locket `protobuf:"bytes,1,rep,name=lockets,proto3" json:"lockets,omitempty"`
}

func (x *SearchLocketsResponse) Reset() {
	*x = SearchLocketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchLocketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchLocketsResponse) ProtoMessage() {}

func (x *SearchLocketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchLocketsResponse.ProtoReflect.Descriptor instead.
func (*SearchLocketsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{6}
}

func (x *SearchLocketsResponse) GetLockets() []*Locket {
	if x != nil {
		return x.Lockets
	}
	return nil
}

type GetLocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetLocketRequest) Reset() {
	*x = GetLocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocketRequest) ProtoMessage() {}

func (x *GetLocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocketRequest.ProtoReflect.Descriptor instead.
func (*GetLocketRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetLocketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetLocketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locket *Locket `protobuf:"bytes,1,opt,name=locket,proto3" json:"locket,omitempty"`
}

func (x *GetLocketResponse) Reset() {
	*x = GetLocketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLocketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLocketResponse) ProtoMessage() {}

func (x *GetLocketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLocketResponse.ProtoReflect.Descriptor instead.
func (*GetLocketResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetLocketResponse) GetLocket() *Locket {
	if x != nil {
		return x.Locket
	}
	return nil
}

type UpdateLocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locket     *Locket                `protobuf:"bytes,1,opt,name=locket,proto3" json:"locket,omitempty"`
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateLocketRequest) Reset() {
	*x = UpdateLocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocketRequest) ProtoMessage() {}

func (x *UpdateLocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocketRequest.ProtoReflect.Descriptor instead.
func (*UpdateLocketRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateLocketRequest) GetLocket() *Locket {
	if x != nil {
		return x.Locket
	}
	return nil
}

func (x *UpdateLocketRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type UpdateLocketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locket *Locket `protobuf:"bytes,1,opt,name=locket,proto3" json:"locket,omitempty"`
}

func (x *UpdateLocketResponse) Reset() {
	*x = UpdateLocketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLocketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLocketResponse) ProtoMessage() {}

func (x *UpdateLocketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLocketResponse.ProtoReflect.Descriptor instead.
func (*UpdateLocketResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateLocketResponse) GetLocket() *Locket {
	if x != nil {
		return x.Locket
	}
	return nil
}

type DeleteLocketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteLocketRequest) Reset() {
	*x = DeleteLocketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocketRequest) ProtoMessage() {}

func (x *DeleteLocketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocketRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocketRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteLocketRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DeleteLocketResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLocketResponse) Reset() {
	*x = DeleteLocketResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocketResponse) ProtoMessage() {}

func (x *DeleteLocketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocketResponse.ProtoReflect.Descriptor instead.
func (*DeleteLocketResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{12}
}

type ExportLocketsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Same as ListLocketsRequest.filter
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ExportLocketsRequest) Reset() {
	*x = ExportLocketsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportLocketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportLocketsRequest) ProtoMessage() {}

func (x *ExportLocketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportLocketsRequest.ProtoReflect.Descriptor instead.
func (*ExportLocketsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{13}
}

func (x *ExportLocketsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type ExportLocketsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *ExportLocketsResponse) Reset() {
	*x = ExportLocketsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportLocketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportLocketsResponse) ProtoMessage() {}

func (x *ExportLocketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportLocketsResponse.ProtoReflect.Descriptor instead.
func (*ExportLocketsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{14}
}

func (x *ExportLocketsResponse) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type SetLocketResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name      string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Resources []*Resource `protobuf:"bytes,2,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *SetLocketResourcesRequest) Reset() {
	*x = SetLocketResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocketResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocketResourcesRequest) ProtoMessage() {}

func (x *SetLocketResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocketResourcesRequest.ProtoReflect.Descriptor instead.
func (*SetLocketResourcesRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{15}
}

func (x *SetLocketResourcesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetLocketResourcesRequest) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type SetLocketResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLocketResourcesResponse) Reset() {
	*x = SetLocketResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocketResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocketResourcesResponse) ProtoMessage() {}

func (x *SetLocketResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocketResourcesResponse.ProtoReflect.Descriptor instead.
func (*SetLocketResourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{16}
}

type ListLocketResourcesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListLocketResourcesRequest) Reset() {
	*x = ListLocketResourcesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketResourcesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketResourcesRequest) ProtoMessage() {}

func (x *ListLocketResourcesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketResourcesRequest.ProtoReflect.Descriptor instead.
func (*ListLocketResourcesRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{17}
}

func (x *ListLocketResourcesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListLocketResourcesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*Resource `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *ListLocketResourcesResponse) Reset() {
	*x = ListLocketResourcesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketResourcesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketResourcesResponse) ProtoMessage() {}

func (x *ListLocketResourcesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketResourcesResponse.ProtoReflect.Descriptor instead.
func (*ListLocketResourcesResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{18}
}

func (x *ListLocketResourcesResponse) GetResources() []*Resource {
	if x != nil {
		return x.Resources
	}
	return nil
}

type SetLocketRelationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name      string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Relations []*LocketRelation `protobuf:"bytes,2,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *SetLocketRelationsRequest) Reset() {
	*x = SetLocketRelationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocketRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocketRelationsRequest) ProtoMessage() {}

func (x *SetLocketRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocketRelationsRequest.ProtoReflect.Descriptor instead.
func (*SetLocketRelationsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{19}
}

func (x *SetLocketRelationsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetLocketRelationsRequest) GetRelations() []*LocketRelation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type SetLocketRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetLocketRelationsResponse) Reset() {
	*x = SetLocketRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetLocketRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLocketRelationsResponse) ProtoMessage() {}

func (x *SetLocketRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLocketRelationsResponse.ProtoReflect.Descriptor instead.
func (*SetLocketRelationsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{20}
}

type ListLocketRelationsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListLocketRelationsRequest) Reset() {
	*x = ListLocketRelationsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketRelationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketRelationsRequest) ProtoMessage() {}

func (x *ListLocketRelationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketRelationsRequest.ProtoReflect.Descriptor instead.
func (*ListLocketRelationsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{21}
}

func (x *ListLocketRelationsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListLocketRelationsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relations []*LocketRelation `protobuf:"bytes,1,rep,name=relations,proto3" json:"relations,omitempty"`
}

func (x *ListLocketRelationsResponse) Reset() {
	*x = ListLocketRelationsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketRelationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketRelationsResponse) ProtoMessage() {}

func (x *ListLocketRelationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketRelationsResponse.ProtoReflect.Descriptor instead.
func (*ListLocketRelationsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListLocketRelationsResponse) GetRelations() []*LocketRelation {
	if x != nil {
		return x.Relations
	}
	return nil
}

type CreateLocketCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name    string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Comment *CreateLocketRequest `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *CreateLocketCommentRequest) Reset() {
	*x = CreateLocketCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocketCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocketCommentRequest) ProtoMessage() {}

func (x *CreateLocketCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocketCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateLocketCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{23}
}

func (x *CreateLocketCommentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateLocketCommentRequest) GetComment() *CreateLocketRequest {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CreateLocketCommentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locket *Locket `protobuf:"bytes,1,opt,name=locket,proto3" json:"locket,omitempty"`
}

func (x *CreateLocketCommentResponse) Reset() {
	*x = CreateLocketCommentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLocketCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLocketCommentResponse) ProtoMessage() {}

func (x *CreateLocketCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLocketCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateLocketCommentResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{24}
}

func (x *CreateLocketCommentResponse) GetLocket() *Locket {
	if x != nil {
		return x.Locket
	}
	return nil
}

type ListLocketCommentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListLocketCommentsRequest) Reset() {
	*x = ListLocketCommentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketCommentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketCommentsRequest) ProtoMessage() {}

func (x *ListLocketCommentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketCommentsRequest.ProtoReflect.Descriptor instead.
func (*ListLocketCommentsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{25}
}

func (x *ListLocketCommentsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListLocketCommentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lockets []*Locket `protobuf:"bytes,1,rep,name=lockets,proto3" json:"lockets,omitempty"`
}

func (x *ListLocketCommentsResponse) Reset() {
	*x = ListLocketCommentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketCommentsResponse) ProtoMessage() {}

func (x *ListLocketCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketCommentsResponse.ProtoReflect.Descriptor instead.
func (*ListLocketCommentsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{26}
}

func (x *ListLocketCommentsResponse) GetLockets() []*Locket {
	if x != nil {
		return x.Lockets
	}
	return nil
}

type GetUserLocketsStatsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the name of the user to get stats for.
	// Format: users/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// timezone location
	// Format: uses tz identifier
	// https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	Timezone string `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	// Same as ListLocketsRequest.filter
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetUserLocketsStatsRequest) Reset() {
	*x = GetUserLocketsStatsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLocketsStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLocketsStatsRequest) ProtoMessage() {}

func (x *GetUserLocketsStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLocketsStatsRequest.ProtoReflect.Descriptor instead.
func (*GetUserLocketsStatsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserLocketsStatsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetUserLocketsStatsRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *GetUserLocketsStatsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type GetUserLocketsStatsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// stats is the stats of locket creating/updating activities.
	// key is the year-month-day string. e.g. "2020-01-01".
	Stats map[string]int32 `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *GetUserLocketsStatsResponse) Reset() {
	*x = GetUserLocketsStatsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserLocketsStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserLocketsStatsResponse) ProtoMessage() {}

func (x *GetUserLocketsStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserLocketsStatsResponse.ProtoReflect.Descriptor instead.
func (*GetUserLocketsStatsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserLocketsStatsResponse) GetStats() map[string]int32 {
	if x != nil {
		return x.Stats
	}
	return nil
}

type ListLocketReactionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListLocketReactionsRequest) Reset() {
	*x = ListLocketReactionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketReactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketReactionsRequest) ProtoMessage() {}

func (x *ListLocketReactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketReactionsRequest.ProtoReflect.Descriptor instead.
func (*ListLocketReactionsRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{29}
}

func (x *ListLocketReactionsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListLocketReactionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reactions []*Reaction `protobuf:"bytes,1,rep,name=reactions,proto3" json:"reactions,omitempty"`
}

func (x *ListLocketReactionsResponse) Reset() {
	*x = ListLocketReactionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListLocketReactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocketReactionsResponse) ProtoMessage() {}

func (x *ListLocketReactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocketReactionsResponse.ProtoReflect.Descriptor instead.
func (*ListLocketReactionsResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{30}
}

func (x *ListLocketReactionsResponse) GetReactions() []*Reaction {
	if x != nil {
		return x.Reactions
	}
	return nil
}

type UpsertLocketReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the locket.
	// Format: lockets/{id}
	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Reaction *Reaction `protobuf:"bytes,2,opt,name=reaction,proto3" json:"reaction,omitempty"`
}

func (x *UpsertLocketReactionRequest) Reset() {
	*x = UpsertLocketReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertLocketReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertLocketReactionRequest) ProtoMessage() {}

func (x *UpsertLocketReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertLocketReactionRequest.ProtoReflect.Descriptor instead.
func (*UpsertLocketReactionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{31}
}

func (x *UpsertLocketReactionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpsertLocketReactionRequest) GetReaction() *Reaction {
	if x != nil {
		return x.Reaction
	}
	return nil
}

type UpsertLocketReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reaction *Reaction `protobuf:"bytes,1,opt,name=reaction,proto3" json:"reaction,omitempty"`
}

func (x *UpsertLocketReactionResponse) Reset() {
	*x = UpsertLocketReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsertLocketReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsertLocketReactionResponse) ProtoMessage() {}

func (x *UpsertLocketReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsertLocketReactionResponse.ProtoReflect.Descriptor instead.
func (*UpsertLocketReactionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{32}
}

func (x *UpsertLocketReactionResponse) GetReaction() *Reaction {
	if x != nil {
		return x.Reaction
	}
	return nil
}

type DeleteLocketReactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReactionId int32 `protobuf:"varint,1,opt,name=reaction_id,json=reactionId,proto3" json:"reaction_id,omitempty"`
}

func (x *DeleteLocketReactionRequest) Reset() {
	*x = DeleteLocketReactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocketReactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocketReactionRequest) ProtoMessage() {}

func (x *DeleteLocketReactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocketReactionRequest.ProtoReflect.Descriptor instead.
func (*DeleteLocketReactionRequest) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteLocketReactionRequest) GetReactionId() int32 {
	if x != nil {
		return x.ReactionId
	}
	return 0
}

type DeleteLocketReactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLocketReactionResponse) Reset() {
	*x = DeleteLocketReactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v2_locket_service_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLocketReactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLocketReactionResponse) ProtoMessage() {}

func (x *DeleteLocketReactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v2_locket_service_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLocketReactionResponse.ProtoReflect.Descriptor instead.
func (*DeleteLocketReactionResponse) Descriptor() ([]byte, []int) {
	return file_api_v2_locket_service_proto_rawDescGZIP(), []int{34}
}

var File_api_v2_locket_service_proto protoreflect.FileDescriptor

var file_api_v2_locket_service_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x1a, 0x13, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,
	0x2f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9b, 0x05, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3d, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x25, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x42, 0x03, 0xe0, 0x41, 0x03, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x41, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x22,
	0x6b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x3a, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x52, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x22, 0x46, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x68, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x6f,
	0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x2e, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22,
	0x49, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x26, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x46, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x29, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x67, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x30, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x6d, 0x0a, 0x19, 0x53, 0x65,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x74,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5b, 0x0a, 0x1b, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x09, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x6f, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x2f, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x07,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x64, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0xa5, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x55, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x67,
	0x0a, 0x1b, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x1c, 0x55, 0x70, 0x73, 0x65, 0x72,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3e, 0x0a,
	0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x1e, 0x0a,
	0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x50, 0x0a,
	0x0a, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x16, 0x56,
	0x49, 0x53, 0x49, 0x42, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x52, 0x49, 0x56, 0x41,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x54, 0x45, 0x43, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x03, 0x32,
	0xf9, 0x13, 0x0a, 0x0d, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x75, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x23, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,
	0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x6f, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x22, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x3a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x79, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x20, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0xda, 0x41, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f,
	0x2a, 0x7d, 0x12, 0x9f, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44,
	0xda, 0x41, 0x12, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x06, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x32, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x82, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x23, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a,
	0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0x7c, 0x0a, 0x0d, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x45, 0x78, 0x70, 0x6f,
	0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x25, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x32, 0x2e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x3a, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x29,
	0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x73, 0x12, 0x2a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0xa1, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x29, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0xda,
	0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x22,
	0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61,
	0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xa0, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x9d, 0x01, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x29, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x12, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32,
	0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x98, 0x01, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x12, 0x2a, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0xda, 0x41, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x2e,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda, 0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0xa4, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x32, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32,
	0x2e, 0x55, 0x70, 0x73, 0x65, 0x72, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0xda,
	0x41, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22, 0x22, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x32, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2f, 0x2a, 0x7d, 0x2f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0xa8, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x32, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0xda, 0x41, 0x0b, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x32, 0x2f, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0xb1, 0x01, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x2e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x32, 0x42, 0x12, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x79, 0x75, 0x71, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x32, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x32, 0xa2, 0x02, 0x03, 0x4c, 0x41, 0x58, 0xaa, 0x02, 0x0e,
	0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x32, 0xca, 0x02,
	0x0e, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32, 0xe2,
	0x02, 0x1a, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x5c, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x32,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x10, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x56, 0x32, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v2_locket_service_proto_rawDescOnce sync.Once
	file_api_v2_locket_service_proto_rawDescData = file_api_v2_locket_service_proto_rawDesc
)

func file_api_v2_locket_service_proto_rawDescGZIP() []byte {
	file_api_v2_locket_service_proto_rawDescOnce.Do(func() {
		file_api_v2_locket_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v2_locket_service_proto_rawDescData)
	})
	return file_api_v2_locket_service_proto_rawDescData
}

var file_api_v2_locket_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v2_locket_service_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_api_v2_locket_service_proto_goTypes = []interface{}{
	(Visibility)(0),                      // 0: lockets.api.v2.Visibility
	(*Locket)(nil),                       // 1: lockets.api.v2.Locket
	(*CreateLocketRequest)(nil),          // 2: lockets.api.v2.CreateLocketRequest
	(*CreateLocketResponse)(nil),         // 3: lockets.api.v2.CreateLocketResponse
	(*ListLocketsRequest)(nil),           // 4: lockets.api.v2.ListLocketsRequest
	(*ListLocketsResponse)(nil),          // 5: lockets.api.v2.ListLocketsResponse
	(*SearchLocketsRequest)(nil),         // 6: lockets.api.v2.SearchLocketsRequest
	(*SearchLocketsResponse)(nil),        // 7: lockets.api.v2.SearchLocketsResponse
	(*GetLocketRequest)(nil),             // 8: lockets.api.v2.GetLocketRequest
	(*GetLocketResponse)(nil),            // 9: lockets.api.v2.GetLocketResponse
	(*UpdateLocketRequest)(nil),          // 10: lockets.api.v2.UpdateLocketRequest
	(*UpdateLocketResponse)(nil),         // 11: lockets.api.v2.UpdateLocketResponse
	(*DeleteLocketRequest)(nil),          // 12: lockets.api.v2.DeleteLocketRequest
	(*DeleteLocketResponse)(nil),         // 13: lockets.api.v2.DeleteLocketResponse
	(*ExportLocketsRequest)(nil),         // 14: lockets.api.v2.ExportLocketsRequest
	(*ExportLocketsResponse)(nil),        // 15: lockets.api.v2.ExportLocketsResponse
	(*SetLocketResourcesRequest)(nil),    // 16: lockets.api.v2.SetLocketResourcesRequest
	(*SetLocketResourcesResponse)(nil),   // 17: lockets.api.v2.SetLocketResourcesResponse
	(*ListLocketResourcesRequest)(nil),   // 18: lockets.api.v2.ListLocketResourcesRequest
	(*ListLocketResourcesResponse)(nil),  // 19: lockets.api.v2.ListLocketResourcesResponse
	(*SetLocketRelationsRequest)(nil),    // 20: lockets.api.v2.SetLocketRelationsRequest
	(*SetLocketRelationsResponse)(nil),   // 21: lockets.api.v2.SetLocketRelationsResponse
	(*ListLocketRelationsRequest)(nil),   // 22: lockets.api.v2.ListLocketRelationsRequest
	(*ListLocketRelationsResponse)(nil),  // 23: lockets.api.v2.ListLocketRelationsResponse
	(*CreateLocketCommentRequest)(nil),   // 24: lockets.api.v2.CreateLocketCommentRequest
	(*CreateLocketCommentResponse)(nil),  // 25: lockets.api.v2.CreateLocketCommentResponse
	(*ListLocketCommentsRequest)(nil),    // 26: lockets.api.v2.ListLocketCommentsRequest
	(*ListLocketCommentsResponse)(nil),   // 27: lockets.api.v2.ListLocketCommentsResponse
	(*GetUserLocketsStatsRequest)(nil),   // 28: lockets.api.v2.GetUserLocketsStatsRequest
	(*GetUserLocketsStatsResponse)(nil),  // 29: lockets.api.v2.GetUserLocketsStatsResponse
	(*ListLocketReactionsRequest)(nil),   // 30: lockets.api.v2.ListLocketReactionsRequest
	(*ListLocketReactionsResponse)(nil),  // 31: lockets.api.v2.ListLocketReactionsResponse
	(*UpsertLocketReactionRequest)(nil),  // 32: lockets.api.v2.UpsertLocketReactionRequest
	(*UpsertLocketReactionResponse)(nil), // 33: lockets.api.v2.UpsertLocketReactionResponse
	(*DeleteLocketReactionRequest)(nil),  // 34: lockets.api.v2.DeleteLocketReactionRequest
	(*DeleteLocketReactionResponse)(nil), // 35: lockets.api.v2.DeleteLocketReactionResponse
	nil,                                  // 36: lockets.api.v2.GetUserLocketsStatsResponse.StatsEntry
	(RowStatus)(0),                       // 37: lockets.api.v2.RowStatus
	(*timestamppb.Timestamp)(nil),        // 38: google.protobuf.Timestamp
	(*Resource)(nil),                     // 39: lockets.api.v2.Resource
	(*LocketRelation)(nil),               // 40: lockets.api.v2.LocketRelation
	(*Reaction)(nil),                     // 41: lockets.api.v2.Reaction
	(*fieldmaskpb.FieldMask)(nil),        // 42: google.protobuf.FieldMask
}
var file_api_v2_locket_service_proto_depIdxs = []int32{
	37, // 0: lockets.api.v2.Locket.row_status:type_name -> lockets.api.v2.RowStatus
	38, // 1: lockets.api.v2.Locket.create_time:type_name -> google.protobuf.Timestamp
	38, // 2: lockets.api.v2.Locket.update_time:type_name -> google.protobuf.Timestamp
	38, // 3: lockets.api.v2.Locket.display_time:type_name -> google.protobuf.Timestamp
	0,  // 4: lockets.api.v2.Locket.visibility:type_name -> lockets.api.v2.Visibility
	39, // 5: lockets.api.v2.Locket.resources:type_name -> lockets.api.v2.Resource
	40, // 6: lockets.api.v2.Locket.relations:type_name -> lockets.api.v2.LocketRelation
	41, // 7: lockets.api.v2.Locket.reactions:type_name -> lockets.api.v2.Reaction
	0,  // 8: lockets.api.v2.CreateLocketRequest.visibility:type_name -> lockets.api.v2.Visibility
	1,  // 9: lockets.api.v2.CreateLocketResponse.locket:type_name -> lockets.api.v2.Locket
	1,  // 10: lockets.api.v2.ListLocketsResponse.lockets:type_name -> lockets.api.v2.Locket
	1,  // 11: lockets.api.v2.SearchLocketsResponse.lockets:type_name -> lockets.api.v2.Locket
	1,  // 12: lockets.api.v2.GetLocketResponse.locket:type_name -> lockets.api.v2.Locket
	1,  // 13: lockets.api.v2.UpdateLocketRequest.locket:type_name -> lockets.api.v2.Locket
	42, // 14: lockets.api.v2.UpdateLocketRequest.update_mask:type_name -> google.protobuf.FieldMask
	1,  // 15: lockets.api.v2.UpdateLocketResponse.locket:type_name -> lockets.api.v2.Locket
	39, // 16: lockets.api.v2.SetLocketResourcesRequest.resources:type_name -> lockets.api.v2.Resource
	39, // 17: lockets.api.v2.ListLocketResourcesResponse.resources:type_name -> lockets.api.v2.Resource
	40, // 18: lockets.api.v2.SetLocketRelationsRequest.relations:type_name -> lockets.api.v2.LocketRelation
	40, // 19: lockets.api.v2.ListLocketRelationsResponse.relations:type_name -> lockets.api.v2.LocketRelation
	2,  // 20: lockets.api.v2.CreateLocketCommentRequest.comment:type_name -> lockets.api.v2.CreateLocketRequest
	1,  // 21: lockets.api.v2.CreateLocketCommentResponse.locket:type_name -> lockets.api.v2.Locket
	1,  // 22: lockets.api.v2.ListLocketCommentsResponse.lockets:type_name -> lockets.api.v2.Locket
	36, // 23: lockets.api.v2.GetUserLocketsStatsResponse.stats:type_name -> lockets.api.v2.GetUserLocketsStatsResponse.StatsEntry
	41, // 24: lockets.api.v2.ListLocketReactionsResponse.reactions:type_name -> lockets.api.v2.Reaction
	41, // 25: lockets.api.v2.UpsertLocketReactionRequest.reaction:type_name -> lockets.api.v2.Reaction
	41, // 26: lockets.api.v2.UpsertLocketReactionResponse.reaction:type_name -> lockets.api.v2.Reaction
	2,  // 27: lockets.api.v2.LocketService.CreateLocket:input_type -> lockets.api.v2.CreateLocketRequest
	4,  // 28: lockets.api.v2.LocketService.ListLockets:input_type -> lockets.api.v2.ListLocketsRequest
	6,  // 29: lockets.api.v2.LocketService.SearchLockets:input_type -> lockets.api.v2.SearchLocketsRequest
	8,  // 30: lockets.api.v2.LocketService.GetLocket:input_type -> lockets.api.v2.GetLocketRequest
	10, // 31: lockets.api.v2.LocketService.UpdateLocket:input_type -> lockets.api.v2.UpdateLocketRequest
	12, // 32: lockets.api.v2.LocketService.DeleteLocket:input_type -> lockets.api.v2.DeleteLocketRequest
	14, // 33: lockets.api.v2.LocketService.ExportLockets:input_type -> lockets.api.v2.ExportLocketsRequest
	16, // 34: lockets.api.v2.LocketService.SetLocketResources:input_type -> lockets.api.v2.SetLocketResourcesRequest
	18, // 35: lockets.api.v2.LocketService.ListLocketResources:input_type -> lockets.api.v2.ListLocketResourcesRequest
	20, // 36: lockets.api.v2.LocketService.SetLocketRelations:input_type -> lockets.api.v2.SetLocketRelationsRequest
	22, // 37: lockets.api.v2.LocketService.ListLocketRelations:input_type -> lockets.api.v2.ListLocketRelationsRequest
	24, // 38: lockets.api.v2.LocketService.CreateLocketComment:input_type -> lockets.api.v2.CreateLocketCommentRequest
	26, // 39: lockets.api.v2.LocketService.ListLocketComments:input_type -> lockets.api.v2.ListLocketCommentsRequest
	28, // 40: lockets.api.v2.LocketService.GetUserLocketsStats:input_type -> lockets.api.v2.GetUserLocketsStatsRequest
	30, // 41: lockets.api.v2.LocketService.ListLocketReactions:input_type -> lockets.api.v2.ListLocketReactionsRequest
	32, // 42: lockets.api.v2.LocketService.UpsertLocketReaction:input_type -> lockets.api.v2.UpsertLocketReactionRequest
	34, // 43: lockets.api.v2.LocketService.DeleteLocketReaction:input_type -> lockets.api.v2.DeleteLocketReactionRequest
	3,  // 44: lockets.api.v2.LocketService.CreateLocket:output_type -> lockets.api.v2.CreateLocketResponse
	5,  // 45: lockets.api.v2.LocketService.ListLockets:output_type -> lockets.api.v2.ListLocketsResponse
	7,  // 46: lockets.api.v2.LocketService.SearchLockets:output_type -> lockets.api.v2.SearchLocketsResponse
	9,  // 47: lockets.api.v2.LocketService.GetLocket:output_type -> lockets.api.v2.GetLocketResponse
	11, // 48: lockets.api.v2.LocketService.UpdateLocket:output_type -> lockets.api.v2.UpdateLocketResponse
	13, // 49: lockets.api.v2.LocketService.DeleteLocket:output_type -> lockets.api.v2.DeleteLocketResponse
	15, // 50: lockets.api.v2.LocketService.ExportLockets:output_type -> lockets.api.v2.ExportLocketsResponse
	17, // 51: lockets.api.v2.LocketService.SetLocketResources:output_type -> lockets.api.v2.SetLocketResourcesResponse
	19, // 52: lockets.api.v2.LocketService.ListLocketResources:output_type -> lockets.api.v2.ListLocketResourcesResponse
	21, // 53: lockets.api.v2.LocketService.SetLocketRelations:output_type -> lockets.api.v2.SetLocketRelationsResponse
	23, // 54: lockets.api.v2.LocketService.ListLocketRelations:output_type -> lockets.api.v2.ListLocketRelationsResponse
	25, // 55: lockets.api.v2.LocketService.CreateLocketComment:output_type -> lockets.api.v2.CreateLocketCommentResponse
	27, // 56: lockets.api.v2.LocketService.ListLocketComments:output_type -> lockets.api.v2.ListLocketCommentsResponse
	29, // 57: lockets.api.v2.LocketService.GetUserLocketsStats:output_type -> lockets.api.v2.GetUserLocketsStatsResponse
	31, // 58: lockets.api.v2.LocketService.ListLocketReactions:output_type -> lockets.api.v2.ListLocketReactionsResponse
	33, // 59: lockets.api.v2.LocketService.UpsertLocketReaction:output_type -> lockets.api.v2.UpsertLocketReactionResponse
	35, // 60: lockets.api.v2.LocketService.DeleteLocketReaction:output_type -> lockets.api.v2.DeleteLocketReactionResponse
	44, // [44:61] is the sub-list for method output_type
	27, // [27:44] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_api_v2_locket_service_proto_init() }
func file_api_v2_locket_service_proto_init() {
	if File_api_v2_locket_service_proto != nil {
		return
	}
	file_api_v2_common_proto_init()
	file_api_v2_locket_relation_service_proto_init()
	file_api_v2_reaction_service_proto_init()
	file_api_v2_resource_service_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v2_locket_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Locket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLocketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchLocketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLocketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLocketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocketResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportLocketsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportLocketsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocketResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocketResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketResourcesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketResourcesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocketRelationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetLocketRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketRelationsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketRelationsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocketCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLocketCommentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketCommentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketCommentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLocketsStatsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserLocketsStatsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketReactionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListLocketReactionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertLocketReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsertLocketReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocketReactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v2_locket_service_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLocketReactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v2_locket_service_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v2_locket_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v2_locket_service_proto_goTypes,
		DependencyIndexes: file_api_v2_locket_service_proto_depIdxs,
		EnumInfos:         file_api_v2_locket_service_proto_enumTypes,
		MessageInfos:      file_api_v2_locket_service_proto_msgTypes,
	}.Build()
	File_api_v2_locket_service_proto = out.File
	file_api_v2_locket_service_proto_rawDesc = nil
	file_api_v2_locket_service_proto_goTypes = nil
	file_api_v2_locket_service_proto_depIdxs = nil
}
